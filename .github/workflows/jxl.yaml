name: JPEG-XL

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: Linux64
            os: ubuntu-latest
            generator: "Ninja Multi-Config"
            cmakeCommand: "cmake"
          - platform: MacOS
            os: macos-latest
            generator: "Ninja Multi-Config"
            cmakeCommand: "xcrun cmake"
          - platform: Win64
            os: windows-latest
            generator: "Visual Studio 17 2022"
            cmakeCommand: "cmake"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: libjxl/libjxl
          submodules: 'recursive'
      - name: Create build directory
        run: mkdir build
      - name: Configure CMake
        working-directory: build
        run: ${{ matrix.cmakeCommand }} -G "${{ matrix.generator }}" -DBUILD_SHARED_LIBS=ON -DBUILD_TESTING=OFF ..
      - name: Build (non-Windows)
        working-directory: build
        if: matrix.platform != 'Win64'
        run: ${{ matrix.cmakeCommand }} --build . --config Release --target jxl -- -j$(nproc)
      - name: Build (Windows)
        working-directory: build
        if: matrix.platform == 'Win64'
        run: ${{ matrix.cmakeCommand }} --build . --config Release --target jxl
      # all artifacts are in build/lib/Release
      - name: Create tarball
        run: tar -czf jxl-${{ matrix.platform }}.tar.gz -C ./build/lib/Release/ .
      - name: Upload to B2
        run: aws s3 cp jxl-${{ matrix.platform }}.tar.gz s3://heathdeps/v0/jxl/${{ matrix.platform }}/${{ github.run_id }}.tar.gz --endpoint-url ${{ vars.B2_ENDPOINT }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_KEY }}
